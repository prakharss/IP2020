NOTE: You are not allowed to use split, reverse or substring methods
i/p: I am a Robot!x  
o/p: I ma a Xtobo!r

i/p: I am a lEuc3ine (I ma a eni3cuEl)
o/p: I ma a eNic3uel

i/p: PRakH
o/p: HKarP

i/p: Prak!har 
o/p: Rahk!arp


Problem: Inplace replacement
i/p: ['w','e',' ','a','r','e',' ','l','e','g','e','n','d','s']
o/p: ['l','e','g','e','n','d','s',' ','a','r','e',' ','w','e']


Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
For example, given [100, 4, 200, 1, 3, 2], the longest consecutive element sequence is [1, 2, 3, 4]. Return its length: 4.
Your algorithm should run in O(n) complexity. 

mn=1 mx=200
int res=0;
int sum=0;
for(int i=mn;i<=mx;i++) {
	if(hash.contains(i))
		sum++;
	else
		sum=0;

	res=Math.max(res,sum);
}

1 1 1 0 0 1 0 1 0 1 1 1 1
1 2 3 0 0 1 0 1 0 1 2 3 4

O(maxValue - minValue) S(n) 

LLD
Recently Role based authentication system 
Role: admin, catalog admin, user, maint
Resurces: R1, R2, R3

sys_id (column)

admin -> R1,R2,R3
maint -> all resource

users -> mulitiple roles

which user can access which rescource?

user -> roles
roles ->

Entity 

POJO ()
Service Layer ()
DAO ()

Application A {
	
}












