TOPICS
- Objects
- Class
- Encapsulation
- Data Hiding
- Inheritance (IS-A)
- Aggregation (HAS-A)
- Association, Aggregation and Composition
- Abstraction
- Polymorphism
- Exception Handling in Java
- JDK JRE and JVM
- Important Feature of Java (Java v/s C++)
- Garbage Collector
- Design Patterns (Singleton, Factory, ...)
- SOLID Principles

KEYWORDS OR INTERVIEW QUESTIONS
- Real world example of OOPS concept
- finally v/s final v/s finalize
- Marker interface (Serializable, Cloneable Interfaces, Random Access) [The java.lang.Cloneable interface must be implemented by the class whose object clone we want to create] 
- Functional Interfaces (Runnable, Comparable Interfaces) [A functional interface is an interface that contains only one abstract method. They can have only one functionality to exhibit]
- Wrapper Classes
- Heap Memory v/s Stack Memory v/s Class Memory 
- How to create immutable class in Java (https://medium.com/@mykola.shumyn/immutable-classes-in-java-76635df0356d)
- Why String is immutable in Java
- intern keyword in Java string
- static and this keyword
- What native code or method is used in Java
- What are threads and what is the advantage of using them in Java
- Importance of  "public static void main(String args[])" in Java
- String s1 = new String("xyz"); String s2 = new String("pqr"); String s3 = s1 + s2;
How many objects are created here?
- enum
- Volatile 
- Transient and Serializable interface (which type of )
- how .class file are generated by having different classes in a project (hands on)
- String s1 = s2 + s3 //what happens 
- Default methods in interfaces
- toString method is present in which class (System.out.println(obj));
- Copy Constructor in C++
- Diamond problem in C++ (Java does not support multiple inheritance)
- Can we override static method? (Why can we not override static method?)
- Default and static method in interface (Java 8)	
- Method hiding and Data hiding (https://stackoverflow.com/questions/16313649/what-is-method-hiding-in-java-even-the-javadoc-explanation-is-confusing#:~:text=Method%20hiding%20means%20subclass%20has,is%20used%20to%20invoke%20it.)

LINKS
- https://javahungry.blogspot.com/2018/09/top-50-java-string-interview-questions-and-answers.html
- https://javahungry.blogspot.com/2018/09/top-50-java-string-interview-questions-and-answers.html
- http://users.csc.calpoly.edu/~gfisher/classes/102/info/howToOverrideEquals.html




